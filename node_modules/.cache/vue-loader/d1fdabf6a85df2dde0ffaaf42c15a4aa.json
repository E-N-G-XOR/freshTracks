{"remainingRequest":"/Users/benjasl/Desktop/gitHub/01-login/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/benjasl/Desktop/gitHub/01-login/src/components/Map.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/benjasl/Desktop/gitHub/01-login/src/components/Map.vue","mtime":1583860362581},{"path":"/Users/benjasl/Desktop/gitHub/01-login/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/benjasl/Desktop/gitHub/01-login/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport L from 'leaflet';\nimport { LMap, LTileLayer } from 'vue2-leaflet';\nimport { Component, Vue } from 'vue-property-decorator';\nimport LGpx from './LGpx.vue';\n@Component({\n  components: {\n    LMap,\n    LTileLayer,\n    LGpx,\n  },\n  data: () => ({\n      distance:33,\n      url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n      zoom: 14,\n      center:[ 48.854131,-121.661891],\n      caller: null,\n       icon: L.icon({\n        iconUrl: '/icons/ski/006-skiing.png',\n        iconSize: [37, 37],\n        iconAnchor: [16, 37]\n      }),\n      file: \"activity1.gpx\",\n      gpxOptions:{\n        joinTrackSegments: false,\n        parseElements: ['track'],\n          marker_options: {\n            startIconUrl: '/icons/ski/050-way.png',\n            endIconUrl: '/icons/ski/042-gloves.png',\n            shadowUrl: ''\n          }\n      },\n      visible:true\n  }\n      ),\n})\nexport default class Example extends Vue {\n  private gpxVisible = true;\n\n\n  private onGpxLoaded(loadedEvent: L.LeafletEvent) {  \n\n    console.log('hello')\n\n     const { mapObject } = this.$refs.map as LMap;\n     const gpxMapObject: L.GPX = loadedEvent.target;\n     mapObject.fitBounds(gpxMapObject.getBounds());\n     console.log(gpxMapObject.get_elevation_gain())\n     \n  }\n  \n  private onClickButton() {\n    this.gpxVisible = !this.gpxVisible;\n  }\n}\n",{"version":3,"sources":["Map.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA","file":"Map.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n\n<h3> Total Distance {{distance}}</h3>\n    <div id=\"example\">\n      <button v-on:click=\"onClickButton()\" >Toggle Tracks</button>\n      <l-map  id=\"map\" style=\"height: 350px\" :zoom=\"zoom\" :center=\"center\">\n      <l-tile-layer :url=\"url\"></l-tile-layer>\n      <l-gpx\n          :gpx-options=\"gpxOptions\" \n          :gpx-file=file\n          :visible=\"gpxVisible\"  \n          @gpx-loaded=\"onGpxLoaded\"\n          />\n      </l-map>\n    </div>\n  </div>\n</template>\n\n\n<script lang=\"ts\">\nimport L from 'leaflet';\nimport { LMap, LTileLayer } from 'vue2-leaflet';\nimport { Component, Vue } from 'vue-property-decorator';\nimport LGpx from './LGpx.vue';\n@Component({\n  components: {\n    LMap,\n    LTileLayer,\n    LGpx,\n  },\n  data: () => ({\n      distance:33,\n      url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n      zoom: 14,\n      center:[ 48.854131,-121.661891],\n      caller: null,\n       icon: L.icon({\n        iconUrl: '/icons/ski/006-skiing.png',\n        iconSize: [37, 37],\n        iconAnchor: [16, 37]\n      }),\n      file: \"activity1.gpx\",\n      gpxOptions:{\n        joinTrackSegments: false,\n        parseElements: ['track'],\n          marker_options: {\n            startIconUrl: '/icons/ski/050-way.png',\n            endIconUrl: '/icons/ski/042-gloves.png',\n            shadowUrl: ''\n          }\n      },\n      visible:true\n  }\n      ),\n})\nexport default class Example extends Vue {\n  private gpxVisible = true;\n\n\n  private onGpxLoaded(loadedEvent: L.LeafletEvent) {  \n\n    console.log('hello')\n\n     const { mapObject } = this.$refs.map as LMap;\n     const gpxMapObject: L.GPX = loadedEvent.target;\n     mapObject.fitBounds(gpxMapObject.getBounds());\n     console.log(gpxMapObject.get_elevation_gain())\n     \n  }\n  \n  private onClickButton() {\n    this.gpxVisible = !this.gpxVisible;\n  }\n}\n</script>"]}]}