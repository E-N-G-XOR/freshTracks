{"remainingRequest":"/Users/benjasl/Desktop/gitHub/freshTracks/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/benjasl/Desktop/gitHub/freshTracks/src/components/Upload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/benjasl/Desktop/gitHub/freshTracks/src/components/Upload.vue","mtime":1584023119954},{"path":"/Users/benjasl/Desktop/gitHub/freshTracks/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/benjasl/Desktop/gitHub/freshTracks/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/benjasl/Desktop/gitHub/freshTracks/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/benjasl/Desktop/gitHub/freshTracks/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios';\nexport default {\n  name: 'Upload',\n  props: {\n    msg: String\n  },\n  data() {\n    console.log(process.env.VUE_APP_POST_URL)\n    return {\n      userID: 1,\n      name: '',\n      email: '',\n      message: '',\n      response: '',\n      success: '',\n      file:'',\n      activeClass: 'active'\n    }\n  },\n  methods: {\n    submitForm() {\n\n      const formData = new FormData();\n      \n      formData.append(\"email\", this.email);\n      formData.append(\"file\",this.file);\n      \n\n   \n\n      axios({\n        method: \"POST\",\n        url: process.env.VUE_APP_APIGW_URL,\n        data: JSON.stringify({name:\"ben\",file:this.file}),\n        headers: {\n        'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        console.log(response);\n        // this.response = response.data\n        this.success = 'Data saved successfully';\n        this.response = JSON.stringify(response, null, 2)\n      }).catch(error => {\n        console.log(error)\n        this.response = 'Error: ' + error.response.status\n      })\n      this.name = '';\n      this.email = '';\n      this.message = '';\n    },\n    handleFileUpload(){\n      console.log('hello')\n       console.log(parser.parseFromString(  this.$refs.file.files[0], \"application/xml\"))\n        this.file = this.$refs.file.files[0];\n      }\n  }\n}\n",{"version":3,"sources":["Upload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Upload.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"contact\" class=\"hello\">\n      <h1>{{ msg }}</h1>\n      <div v-if=\"response\" id=\"response\">\n        <h2>Thank you, here's the response</h2>\n        <pre >{{ response }}</pre>\n      </div>\n      <div v-else>\n        <form @submit.prevent=\"submitForm\">\n          <div class=\"large-12 medium-12 small-12 cell\">\n            <label>File\n              <input type=\"file\" id=\"file\" ref=\"file\" v-on:change=\"handleFileUpload()\"/>\n            </label>\n          </div>\n          <div>\n            <label for=\"email\">Email:</label><br>\n            <input id=\"email\" type=\"email\" v-model=\"email\" required/>\n          </div>\n          <div>\n            <label for=\"message\">Message:</label><br>\n            <textarea id=\"message\" v-model=\"message\" required></textarea>\n          </div>\n          <button :class=\"[name ? activeClass : '']\" type=\"submit\">Submit</button>\n        </form>\n      </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nexport default {\n  name: 'Upload',\n  props: {\n    msg: String\n  },\n  data() {\n    console.log(process.env.VUE_APP_POST_URL)\n    return {\n      userID: 1,\n      name: '',\n      email: '',\n      message: '',\n      response: '',\n      success: '',\n      file:'',\n      activeClass: 'active'\n    }\n  },\n  methods: {\n    submitForm() {\n\n      const formData = new FormData();\n      \n      formData.append(\"email\", this.email);\n      formData.append(\"file\",this.file);\n      \n\n   \n\n      axios({\n        method: \"POST\",\n        url: process.env.VUE_APP_APIGW_URL,\n        data: JSON.stringify({name:\"ben\",file:this.file}),\n        headers: {\n        'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        console.log(response);\n        // this.response = response.data\n        this.success = 'Data saved successfully';\n        this.response = JSON.stringify(response, null, 2)\n      }).catch(error => {\n        console.log(error)\n        this.response = 'Error: ' + error.response.status\n      })\n      this.name = '';\n      this.email = '';\n      this.message = '';\n    },\n    handleFileUpload(){\n      console.log('hello')\n       console.log(parser.parseFromString(  this.$refs.file.files[0], \"application/xml\"))\n        this.file = this.$refs.file.files[0];\n      }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n#app {\n  display: flex;\n  justify-content: center;\n  font-family: 'Work Sans', sans-serif;\n}\nform {\n  width: 500px;\n  padding: 10px 40px;\n  margin: 0 auto;\n  text-align: left;\n}\n  label {\n    text-transform: uppercase;\n    font-size: 20px;\n    letter-spacing: 0.03em;\n    font-weight: bold;\n    margin-top:10px;\n    margin-bottom:10px;\n    \n  }\n  input, textarea {\n    border: 1px solid #ccc;\n    color: #333;\n    width: calc(100% - 30px);\n    font-size:20px;\n    padding:10px;\n    margin-bottom:20px;\n  }\n  input, textarea, button {\n    border-radius: 4px;\n    padding: 8px 15px;\n    font-family: 'Work Sans', sans-serif;\n    font-weight: 300;\n  }\nbutton {\n  color:#000;\n  border: none;\n  width: calc(100% - 30px);\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 0.08em;\n  background: #eee;\n  cursor: pointer;\n  font-size:20px;\n  box-shadow: 0px 2px 3px rgba(0, 0, 0, 0.3);\n  transition: 0.25s all ease;\n  margin-top:20px;\n  width: 100%;\n  padding:10px;\n}\n#response{\n   margin: 0 auto;\nfont-size: 14px;\ntext-align: left;\nbackground: #eee;\npadding: 20px;\nwidth: auto;\noverflow: scroll;\nmax-width: 400px;\nborder:solid;\n  }"]}]}